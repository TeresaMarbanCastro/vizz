{"version":3,"sources":["assets/icons/drag-dots.svg","assets/icons/info.svg","assets/icons/hide-eye.svg","assets/icons/show.svg","assets/icons/close.svg","assets/icons/arrow-down.svg","components/toolbar/toolbar.js","components/title/title.js","components/icon/icon.js","components/legendTypeItem/gradient.js","components/legendTypeItem/cloropeth.js","components/legendTypeItem/basic.js","components/legendTypeItem/legendTypeItem.js","components/button/button.js","components/modal/modal.js","components/legend/legend.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Toolbar","props","className","children","Title","title","Icon","src","alt","Gradient","colors","items","map","item","color","join","onClick","style","background","id","aria-controls","filter","name","el","i","key","isExtraTextVisible","role","aria-live","href","target","rel","Cloropeth","Basic","LegendTypeItem","handleClick","setState","state","this","type","description","React","Component","Button","data-tooltip","dataTooltipText","Modal","Legend","SHOW_LAYER","HIDE_LAYER","COLLAPSE_LAYER","EXPAND_LAYER","LAYER_INFO","onChangeVisibility","isVisible","onChangeInfo","isInfoOpen","onChangeCollapse","isExpanded","visibilityName","collapseName","parseText","replace","drag","show","hide","info","aria-haspopup","expand","ariaExpanded","close","Home","data","fetch","then","response","json","dataResponse","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d07a7325.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drag-dots.eba956a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/info.aed632c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/hide-eye.edfe4042.svg\";","module.exports = __webpack_public_path__ + \"static/media/show.f503c7d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.9798c856.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.a599f50b.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './toolbar.scss';\n\nconst Toolbar = props => <ul className={props.className}>{props.children}</ul>\n\nToolbar.propTypes = {\n\tclassName: PropTypes.string,\n\tchildren: PropTypes.any\n}\nexport default Toolbar;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport './title.scss';\n\nconst Title = props => <h2>{props.title}</h2>\n\nTitle.propTypes = {\n\ttitle: Proptypes.string\n}\nexport default Title;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './icon.scss';\n\nconst Icon = props => <img src={props.src} className={props.className} alt=\"\"/>\n\nIcon.propTypes = {\n\tsrc: PropTypes.string,\n\tclassName: PropTypes.string\n}\n\nexport default Icon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Gradient = props => {\n\tconst colors = props.items.map((item => item.color)).join(',');\n\tconst randomText = 'Culpa nisi adipisicing irure exercitation et velit ea. Ipsum ullamco nostrud aliqua esse dolor deserunt ad incididunt minim quis amet nisi consectetur sunt.'; \n\tconst url = \"https://vizzuality.com\";\n\treturn (\n\t\t<section className=\"gradient-container\">\n\t\t\t<button className=\"buttonGradient\"\n\t\t\t\tonClick={props.onClick}\n\t\t\t\tstyle={{background: `linear-gradient(to right, ${colors})`}}\n\t\t\t\tid=\"button-gradient-id\"\n\t\t\t\taria-controls=\"extra-text\">\n\t\t\t</button>\n\t\t\t<div className=\"gradient-titles-container\">\n\t\t\t\t{props.items.filter(item => item.name).map((el,i) => <p key={i}>{el.name}</p>)}\n\t\t\t</div>\n\t\t\t{props.isExtraTextVisible &&\n\t\t\t\t<div\n\t\t\t\t\trole=\"region\"\n\t\t\t\t\tid=\"extra-text\"\n\t\t\t\t\taria-live=\"polite\">\n\t\t\t\t\t<p>{randomText}</p>\n\t\t\t\t\t<a href={url} \n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>Check the data</a>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</section>\n\t)\n}\n\nGradient.propTypes = {\n\titems: PropTypes.array,\n\tonClick: PropTypes.func,\n\tisExtraTextVisible: PropTypes.bool\n}\n\nexport default Gradient;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Cloropeth = props => {\n\treturn (\n\t\t<div className=\"cloropeth-container\">\n\t\t\t<button className=\"buttonGradient\">\n\t\t\t\t{props.items.map((el, i) => <hr style={{color: el.color}} key={i} className=\"line\"></hr>)}\n\t\t\t</button>\n\t\t\t<div className=\"cloropeth-titles-container\">\n\t\t\t\t{props.items.filter(item => item.name).map((el,i) => <p key={i}>{el.name}</p>)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nCloropeth.propTypes = {\n\titems: PropTypes.array\n}\n\nexport default Cloropeth;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Basic = props => {\n\treturn (\n\t\t<div className=\"basic-container\">\n\t\t\t<div className=\"basic-buttons-container\">\n\t\t\t\t{props.items.map((el, i) => <button key={i} className=\"basic-buttons\" style={{background: el.color}}></button>)}\n\t\t\t</div>\n\t\t\t<div className=\"basic-titles-container\">\n\t\t\t\t{props.items.filter(item => item.name).map((el,i) => <p key={i}>{el.name}</p>)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nBasic.propTypes = {\n\titems: PropTypes.array\n}\nexport default Basic;","import React from 'react';\nimport './legendTypeItem.scss';\nimport PropTypes from 'prop-types';\nimport Gradient from './gradient';\nimport Cloropeth from './cloropeth';\nimport Basic from './basic';\n\nclass LegendTypeItem extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisExtraTextVisible: false,\n\t\t};\n\t}\n\n\thandleClick = () => {\n\t\tthis.setState({isExtraTextVisible: !this.state.isExtraTextVisible})\t\t\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.props.type === \"gradient\" &&\n\t\t\t\t\t<Gradient isExtraTextVisible={this.state.isExtraTextVisible} onClick={this.handleClick} items={this.props.items} type={this.props.type} description={this.props.description}/>\n\t\t\t\t}\n\t\t\t\t{this.props.type === \"choropleth\" &&\n\t\t\t\t\t<Cloropeth items={this.props.items} type={this.props.type}/>\n\t\t\t\t}\n\t\t\t\t{this.props.type === \"basic\" &&\n\t\t\t\t\t<Basic items={this.props.items} type={this.props.type}/>\n\t\t\t\t}\n\t\t\t</>\n\t\t)\n\t}\n}\n\nLegendTypeItem.propTypes = { \n\ttype: PropTypes.string\n}\nexport default LegendTypeItem;\n","import React from 'react';\nimport Icon from '../icon/icon';\nimport PropTypes from 'prop-types';\nimport './button.scss';\n\nconst Button = props => {\n\treturn (\n\t\t<button \n\t\t\tonClick={props.onClick}\n\t\t\tdata-tooltip={props.dataTooltipText}\n\t\t\tname={props.name}\n\t\t\tclassName={props.className}>\n\t\t\t<Icon src={props.src} alt={props.alt} />\n\t\t</button>\n\t)};\n\nButton.propTypes = {\n\tonClick: PropTypes.func,\n\tdataTooltipText: PropTypes.string,\n\tname: PropTypes.string,\n\tclassName: PropTypes.string,\n\tsrc: PropTypes.string,\n\talt: PropTypes.string\n}\nexport default Button;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './modal.scss';\n\nconst Modal = props => <div className=\"modal-container\" role=\"dialog\" aria-live=\"assertive\"><div className=\"modal-content\">{props.children}</div></div>\n\nModal.propTypes = {\n\tchildren: PropTypes.any\n}\nexport default Modal;","import React from 'react'\nimport Toolbar from '../toolbar/toolbar';\nimport Title from '../title/title';\nimport Icon from '../icon/icon';\nimport LegendTypeItem from '../legendTypeItem/legendTypeItem';\nimport drag from 'assets/icons/drag-dots.svg';\nimport info from 'assets/icons/info.svg';\nimport hide from 'assets/icons/hide-eye.svg';\nimport show from 'assets/icons/show.svg';\nimport close from 'assets/icons/close.svg';\nimport Button from '../button/button';\nimport expand from 'assets/icons/arrow-down.svg';\nimport Modal from 'components/modal/modal';\nimport './legend.scss';\n\nclass Legend extends React.Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisExpanded: true,\n\t\t\tisVisible: true,\n\t\t\tisInfoOpen: false\n\t\t};\n\t}\n\n\tSHOW_LAYER = \"Show layer\";\n\tHIDE_LAYER = \"Hide layer\";\n\tCOLLAPSE_LAYER = \"Collapse layer\";\n\tEXPAND_LAYER = \"Expand layer\";\n\tLAYER_INFO= \"Layer info\";\n\n\tonChangeVisibility = () => {\n\t\tthis.setState({isVisible: !this.state.isVisible})\t\t\n\t}\n\n\tonChangeInfo = () => {\n\t\tthis.setState({isInfoOpen: !this.state.isInfoOpen})\n\t}\n\n\tonChangeCollapse = () => {\n\t\tthis.setState({isExpanded: !this.state.isExpanded})\n\t}\n\n\trender() {\n\t\tconst visibilityName = this.state.isVisible ? this.SHOW_LAYER : this.HIDE_LAYER;\n\t\tconst collapseName = this.state.isExpanded ? this.COLLAPSE_LAYER : this.EXPAND_LAYER;\n\t\tconst parseText = (this.props.description || {}).replace(/<[^>]*>/gm, '');\n\t\t\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<header className=\"legend-header\">\n\t\t\t\t\t<Icon src={drag} className=\"legend-drag-icon\"/>\n\t\t\t\t\t<Title title={this.props.name}/>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdataTooltipText={visibilityName}\n\t\t\t\t\t\t\t\tsrc={this.state.isVisible ? show : hide}\n\t\t\t\t\t\t\t\tname={visibilityName}\n\t\t\t\t\t\t\t\tonClick={this.onChangeVisibility}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tname={this.LAYER_INFO}\n\t\t\t\t\t\t\t\tdataTooltipText={this.LAYER_INFO}\n\t\t\t\t\t\t\t\tsrc={info}\n\t\t\t\t\t\t\t\tonClick={this.onChangeInfo}\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li> \n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\tsrc={expand}\n\t\t\t\t\t\t\t\tonClick={this.onChangeCollapse}\n\t\t\t\t\t\t\t\tdataTooltipText={collapseName}\n\t\t\t\t\t\t\t\tname={collapseName}\n\t\t\t\t\t\t\t\tariaExpanded={this.state.isExpanded}\n\t\t\t\t\t\t\t\tclassName={this.state.isExpanded ? 'rotate-up-right-down' : 'rotate-down-right-up'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</header>\n\t\t\t\t{this.state.isExpanded &&\n\t\t\t\t\t<LegendTypeItem type={this.props.type} items={this.props.items}/>\n\t\t\t\t}\n\t\t\t\t{this.state.isInfoOpen &&\n\t\t\t\t\t<Modal>\n\t\t\t\t\t\t<Title title={parseText}/>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tclassName=\"button-modal\"\t\t\t\t\t\n\t\t\t\t\t\t\tname=\"close\"\n\t\t\t\t\t\t\tsrc={close}\n\t\t\t\t\t\t\tonClick={this.onChangeInfo}/>\n\t\t\t\t\t</Modal>\n\t\t\t\t}\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nexport default Legend;","import React from 'react';\nimport Legend from '../components/legend/legend';\nimport './home.scss';\n\n\nclass Home extends React.Component {\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdata: []\n\t\t};\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://raw.githubusercontent.com/Vizzuality/front-end-code-challenge/master/data.json')\n\t\t.then(response => response.json())\n\t\t.then(dataResponse => this.setState({data: dataResponse.filter(item => item.type !== 'timeline')}))\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<main className=\"page\">\n\t\t\t\t{this.state.data.map((item) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<Legend \n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tname={item.name} \n\t\t\t\t\t\t\titems={item.items}\n\t\t\t\t\t\t\tdescription={item.description} \n\t\t\t\t\t\t\ttype={item.type}/>\n\t\t\t\t\t)})\n\t\t\t\t}\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nexport default Home;","import React from 'react';\nimport './App.scss';\nimport Home from './pages/home';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Home />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}